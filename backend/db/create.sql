-- Postgres-compatible schema for Madness Multiplier
-- Minimal changes from SQL Server style: no GO, no T-SQL IF/EXEC, no IDENTITY(...)

CREATE SCHEMA IF NOT EXISTS mm;
SET search_path TO mm, public;

-- Users: fake-money balances
CREATE TABLE IF NOT EXISTS users (
  id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username  VARCHAR(64) UNIQUE NOT NULL,
  balance   NUMERIC(18,2) NOT NULL DEFAULT 1000.00
);

-- Pools (groups of friends)
CREATE TABLE IF NOT EXISTS pools (
  id    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name  VARCHAR(128) NOT NULL
);

-- Pool membership (user must be in a pool to wager in it)
CREATE TABLE IF NOT EXISTS pool_members (
  user_id   INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  pool_id   INT NOT NULL REFERENCES pools(id) ON DELETE CASCADE,
  joined_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  PRIMARY KEY (user_id, pool_id)
);

-- Teams with seeds
CREATE TABLE IF NOT EXISTS teams (
  id      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name    VARCHAR(128) NOT NULL,
  seed    INT NOT NULL CHECK (seed BETWEEN 1 AND 16),
  season  INT NOT NULL
);

-- Games between two teams
CREATE TABLE IF NOT EXISTS games (
  id             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  round          VARCHAR(32) NOT NULL,
  home_team_id   INT NOT NULL REFERENCES teams(id),
  away_team_id   INT NOT NULL REFERENCES teams(id),
  start_time     TIMESTAMPTZ NOT NULL,
  status         VARCHAR(16) NOT NULL DEFAULT 'SCHEDULED'
                  CHECK (status IN ('SCHEDULED','LOCKED','FINAL')),
  winner_team_id INT
);

-- Wagers placed by users within a pool on a game/team
CREATE TABLE IF NOT EXISTS wagers (
  id               INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id          INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  pool_id          INT NOT NULL REFERENCES pools(id) ON DELETE CASCADE,
  game_id          INT NOT NULL REFERENCES games(id) ON DELETE CASCADE,
  team_id          INT NOT NULL REFERENCES teams(id),
  amount           NUMERIC(18,2) NOT NULL CHECK (amount > 0),
  odds             NUMERIC(10,4) NOT NULL,
  expected_payout  NUMERIC(18,2) NOT NULL,
  status           VARCHAR(16) NOT NULL CHECK (status IN ('PENDING','WON','LOST','VOID')),
  idempotency_key  VARCHAR(64) UNIQUE,
  created_at       TIMESTAMPTZ NOT NULL DEFAULT NOW()
);
